{"version":3,"file":"main.563c31ab0f15b877ed41.bundle.js","sources":["webpack:///./examples/big-data-generator.js"],"sourcesContent":["/* eslint react/no-string-refs:0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { generateData, calcTotal } from './utils/dataUtil';\n\nclass Gen extends React.Component {\n  static propTypes = {\n    onGen: PropTypes.func,\n    x: PropTypes.number,\n    y: PropTypes.number,\n    z: PropTypes.number,\n  };\n\n  static defaultProps = {\n    onGen: () => {},\n    x: 20,\n    y: 18,\n    z: 1,\n  };\n\n  state = {\n    nums: '',\n  };\n\n  componentDidMount() {\n    const vals = this.getVals();\n    this.props.onGen(generateData(vals.x, vals.y, vals.z));\n  }\n\n  onGen = e => {\n    e.preventDefault();\n    const vals = this.getVals();\n    this.props.onGen(generateData(vals.x, vals.y, vals.z));\n    this.setState({\n      nums: calcTotal(vals.x, vals.y, vals.z),\n    });\n  };\n\n  getVals() {\n    return {\n      x: parseInt(this.refs.x.value, 10),\n      y: parseInt(this.refs.y.value, 10),\n      z: parseInt(this.refs.z.value, 10),\n    };\n  }\n\n  render() {\n    const { x, y, z } = this.props;\n    return (\n      <div style={{ padding: '0 20px' }}>\n        <h2>big data generator</h2>\n        <form onSubmit={this.onGen}>\n          <label style={{ marginRight: 10 }}>\n            x:{' '}\n            <input ref=\"x\" defaultValue={x} type=\"number\" min=\"1\" required style={{ width: 50 }} />\n          </label>\n          <label style={{ marginRight: 10 }}>\n            y:{' '}\n            <input ref=\"y\" defaultValue={y} type=\"number\" min=\"0\" required style={{ width: 50 }} />\n          </label>\n          <label style={{ marginRight: 10 }}>\n            z:{' '}\n            <input ref=\"z\" defaultValue={z} type=\"number\" min=\"0\" required style={{ width: 50 }} />\n          </label>\n          <button type=\"submit\">Generate</button>\n          <p>total nodes: {this.state.nums || calcTotal(x, y, z)}</p>\n        </form>\n        <p style={{ fontSize: 12 }}>\n          x：每一级下的节点总数。y：每级节点里有y个节点、存在子节点。z：树的level层级数（0表示一级）\n        </p>\n      </div>\n    );\n  }\n}\nexport default Gen;\n"],"mappings":"AAMA","sourceRoot":""}